{#
    templates/product/new.html.twig
    ================================

    Ce template affiche le formulaire de cr√©ation d'un nouvel article (produit).
    Il est g√©r√© par `ProductController::new`.
    Ce formulaire est assez complexe car il g√®re :
    - Des champs de texte, de prix, et de description.
    - L'upload de multiples fichiers image.
    - L'int√©gration d'une modale pour la capture via webcam.

    Variables Cl√©s :
    - `form`: L'objet FormView de `ProductFormType` pour construire le formulaire.
#}
{% extends 'base.html.twig' %}

{% block title %}Mettre un nouvel article en vente{% endblock %}
{% block meta_description %}Vendez vos cartes Pok√©mon et autres objets de collection sur Destocard. Cr√©ez votre annonce facilement et rapidement.{% endblock %}

{% block body %}
<div class="form-container">
    <h1 class="site-title">Mettre un nouvel article en vente</h1>

    {# `form_start` inclut l'attribut `enctype="multipart/form-data"` n√©cessaire pour l'upload de fichiers. #}
    {{ form_start(form) }}
        <div class="form-columns">
            <div class="form-column-left">
                <fieldset>
                    <legend>D√©tails de l'article</legend>
                    
                    {# 
                        On utilise ici `form_row` pour les champs simples. C'est un raccourci
                        qui g√©n√®re label, widget, et erreurs.
                    #}
                    {{ form_row(form.title) }}

                    <div class="form-grid">
                        {{ form_row(form.number) }}
                        {{ form_row(form.category) }}
                    </div>
                    
                    {{ form_row(form.price) }}
                </fieldset>
            </div>

            <div class="form-column-right">
                <fieldset>
                    <legend>Description & M√©dias</legend>
                    
                    {{ form_row(form.description) }}

                    <div class="form-group">
                        {{ form_label(form.imageFiles, 'Photos de votre article') }}
                        <div class="form-image-upload">
                            <div class="form-file-input">
                                {# Le champ `imageFiles` est `mapped` => false, il sera g√©r√© manuellement. #}
                                {{ form_widget(form.imageFiles) }}
                                {# Le label est li√© au widget par l'attribut `for`. #}
                                <label for="{{ form.imageFiles.vars.id }}" class="form-file-label">
                                    üì∑ Choisir des photos
                                </label>
                            </div>
                            <button type="button" id="webcam-button" class="btn btn--secondary" aria-label="Utiliser la webcam">
                                üì± Webcam
                            </button>
                        </div>
                        {{ form_errors(form.imageFiles) }}
                        <div class="form-help">Formats accept√©s : PNG, JPG - Taille max : 5MB par fichier</div>
                        
                        {# Ce conteneur sera rempli par JavaScript avec les aper√ßus des images s√©lectionn√©es. #}
                        <div id="image-preview-container"></div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="form-actions">
            <a href="{{ path('app_user_products') }}" class="btn btn--secondary">Annuler</a>
            <button type="submit" class="btn btn--primary">üöÄ Mettre en vente</button>
        </div>
    {{ form_end(form) }}
</div>

{# 
    La modale pour la webcam est cach√©e par d√©faut (`display: none`).
    Elle est g√©r√©e enti√®rement par `product-form.js`.
#}
<div id="webcam-modal" class="webcam-modal" style="display: none;" aria-hidden="true" role="dialog" aria-labelledby="webcam-modal-title">
    <div class="webcam-modal-content">
        <h3 id="webcam-modal-title">Prendre une photo avec la webcam</h3>
        <video id="webcam-video" autoplay playsinline aria-label="Aper√ßu de la webcam"></video>
        {# Le canvas est utilis√© pour dessiner l'image captur√©e avant de l'envoyer. #}
        <canvas id="webcam-canvas" style="display: none;"></canvas>
        <div class="webcam-controls">
            <button type="button" id="capture-button" class="btn btn--primary" aria-label="Capturer la photo">üì∏ Capturer</button>
            <button type="button" id="close-webcam-button" class="btn btn--secondary" aria-label="Fermer la webcam">‚ùå Fermer</button>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {#
        Le script `product-form.js` est responsable de toute l'interactivit√© de cette page :
        - Pr√©visualisation des images s√©lectionn√©es.
        - Ouverture et gestion de la modale webcam.
        - Capture de l'image depuis la webcam et injection dans le formulaire.
    #}
{% endblock %} 